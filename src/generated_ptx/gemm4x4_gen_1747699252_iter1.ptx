.version 7.5
.target sm_86

.visible .entry gemm4x4(
    .param .u64 gemm4x4_param_0,  // Pointer to matrix A
    .param .u64 gemm4x4_param_1,  // Pointer to matrix B
    .param .u64 gemm4x4_param_2   // Pointer to matrix C
)
{
    .reg .f32   %f<17>;  // Registers to hold elements of A, B, and C
    .reg .b64   %rd<4>;  // Registers to hold pointers to A, B, and C

    // Load pointers to matrices A, B, and C
    ld.param.u64    %rd1, [gemm4x4_param_0];
    ld.param.u64    %rd2, [gemm4x4_param_1];
    ld.param.u64    %rd3, [gemm4x4_param_2];

    // Initialize registers to hold elements of C
    mov.f32         %f1, 0f00000000;
    mov.f32         %f2, 0f00000000;
    mov.f32         %f3, 0f00000000;
    mov.f32         %f4, 0f00000000;
    mov.f32         %f5, 0f00000000;
    mov.f32         %f6, 0f00000000;
    mov.f32         %f7, 0f00000000;
    mov.f32         %f8, 0f00000000;
    mov.f32         %f9, 0f00000000;
    mov.f32         %f10, 0f00000000;
    mov.f32         %f11, 0f00000000;
    mov.f32         %f12, 0f00000000;
    mov.f32         %f13, 0f00000000;
    mov.f32         %f14, 0f00000000;
    mov.f32         %f15, 0f00000000;
    mov.f32         %f16, 0f00000000;

    // Perform matrix multiplication
    ld.global.f32   %f17, [%rd1];
    ld.global.f32   %f1, [%rd2];
    fma.rn.f32      %f1, %f17, %f1, %f1;
    ld.global.f32   %f17, [%rd1 + 4];
    ld.global.f32   %f2, [%rd2 + 16];
    fma.rn.f32      %f2, %f17, %f2, %f2;
    ld.global.f32   %f17, [%rd1 + 8];
    ld.global.f32   %f3, [%rd2 + 32];
    fma.rn.f32      %f3, %f17, %f3, %f3;
    ld.global.f32   %f17, [%rd1 + 12];
    ld.global.f32   %f4, [%rd2 + 48];
    fma.rn.f32      %f4, %f17, %f4, %f4;

    ld.global.f32   %f17, [%rd1 + 16];
    ld.global.f32   %f5, [%rd2 + 1];
    fma.rn.f32      %f5, %f17, %f5, %f5;
    ld.global.f32   %f17, [%rd1 + 20];
    ld.global.f32   %f6, [%rd2 + 17];
    fma.rn.f32      %f6, %f17, %f6, %f6;
    ld.global.f32   %f17, [%rd1 + 24];
    ld.global.f32   %f7, [%rd2 + 33];
    fma.rn.f32      %f7, %f17, %f7, %f7;
    ld.global.f32   %f17, [%rd1 + 28];
    ld.global.f32   %f8, [%rd2 + 49];
    fma.rn.f32      %f8, %f17, %f8, %f8;

    ld.global.f32   %f17, [%rd1 + 32];
    ld.global.f32   %f9, [%rd2 + 2];
    fma.rn.f32      %f9, %f17, %f9, %f9;
    ld.global.f32   %f17, [%rd1 + 36];
    ld.global.f32   %f10, [%rd2 + 18];
    fma.rn.f32      %f10, %f17, %f10, %f10;
    ld.global.f32   %f17, [%rd1 + 40];
    ld.global.f32   %f11, [%rd2 + 34];
    fma.rn.f32      %f11, %f17, %f11, %f11;
    ld.global.f32   %f17, [%rd1 + 44];
    ld.global.f32   %f12, [%rd2 + 50];
    fma.rn.f32      %f12, %f17, %f12, %f12;

    ld.global.f32   %f17, [%rd1 + 48];
    ld.global.f32   %f13, [%rd2 + 3];
    fma.rn.f32      %f13, %f17, %f13, %f13;
    ld.global.f32   %f17, [%rd1 + 52];
    ld.global.f32   %f14, [%rd2 + 19];
    fma.rn.f32      %f14, %f17, %f14, %f14;
    ld.global.f32   %f17, [%rd1 + 56];
    ld.global.f32   %f15, [%rd2 + 35];
    fma.rn.f32      %f15, %f17, %f15, %f15;
    ld.global.f32   %f17, [%rd1 + 60];
    ld.global.f32   %f16, [%rd2 + 51];
    fma.rn.f32      %f16, %f17, %f16, %f16;

    // Store results in matrix C
    st.global.f32   [%rd3], %f1;
    st.global.f32   [%rd3 + 4], %f5;
    st.global.f32   [%rd3 + 8], %f9;
    st.global.f32   [%rd3 + 12], %f13;
    st.global.f32   [%rd3 + 16], %f2;
    st.global.f32   [%rd3 + 20], %f6;
    st.global.f32   [%rd3 + 24], %f10;
    st.global.f32   [%rd3 + 28], %f14;
    st.global.f32   [%rd3 + 32], %f3;
    st.global.f32   [%rd3 + 36], %f7;
    st.global.f32   [%rd3 + 40], %f11;
    st.global.f32   [%rd3 + 44], %f15;
    st.global.f32   [%rd3 + 48], %f4;
    st.global.f32   [%rd3 + 52], %f8;
    st.global.f32   [%rd3 + 56], %f12;
    st.global.f32   [%rd3 + 60], %f16;

    ret;
}